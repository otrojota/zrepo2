{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * @ignore\n\t */\n\totherCharts?: Array<XYChart>\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\t \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t * \n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.* \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\twheelEvent.preventDefault()\n\n\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tthis.handleWheel(event);\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t})\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t})\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif(chart && $object.keys(chart.plotContainer._downPoints).length > 1){\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\nthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync:boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured:false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\t\t\t\t\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\tthumb.set(\"centerX\", p100);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\t\tthumb.setPrivate(\"width\", axis.labelsContainer.width());\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\t\t\t\t\tlet endIndex = end.index;\n\n\t\t\t\t\tlet endIndex2 = endIndex;\n\t\t\t\t\tif (endIndex2 > 0) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime()) //$time.round(new Date(value + intervalDuration * 1.1), gridInterval.timeUnit, gridInterval.count).getTime());\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstartTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\t\tendTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), this._root.timezone).getTime();\n\t\t\tlet endValue = value;\n\t\t\tif (location > 0) {\n\t\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t}\n\t\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet date = new Date(this.positionToValue(position));\n\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position) + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst len = dates.length;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn index / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet len = this._dates.length;\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length);\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\t\t\tlet firstDate = new Date();\r\n\t\t\tif(this._dates[0]){\r\n\t\t\t\tfirstDate = new Date(this._dates[0]);\r\n\t\t\t}\r\n\r\n\t\t\tlet startDate = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone);\r\n\t\t\tlet value = $time.add(startDate, gridInterval.timeUnit, -1, this._root.utc).getTime();\r\n\t\t\t\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\r\n\r\n\r\n\t\t\t\tif(realValue < value){\r\n\t\t\t\t\tfor(let i = index, len = this._dates.length; i < len; i++){\r\n\t\t\t\t\t\tlet realValue = this._dates[i];\r\n\t\t\t\t\t\tif(realValue >= value){\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = -Infinity;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _saveMinMax(_min:number, _max:number){\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker();\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","this","_defaultThemes","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","_maskGrid","gridContainer","series","xAxis","get","yAxis","cursor","snapToSeries","_removeSeries","wheelX","wheelY","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","position","fixPosition","newStart","newEnd","Infinity","_handleWheelAnimation","zoom","getPrivate","delta","_getWheelSign","se","_fixWheel","_wheelDp","handleWheel","dispose","sign","diff","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","undefined","_isPanning","_movePoints","_handlePinch","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","point","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","Math","max","sa","ea","downStartY","downEndY","isHidden","isHiding","startIndex","endIndex","dataItem","dataItems","tooltipDataItem","distance","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","left","right","_axis","force","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","plotT","_display","plotB","tooltips","sum","minDistance","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","count","sort","a","b","centerY","top","bottom","min","_fy","reverse","XYChart","className","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","arrangeTooltips","pinchZoomX","pinchZoomY","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","layer","exportable","snapToSeriesBy","strokeDasharray","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","translate","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_updateChildren","_handleSyncWith","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","rootPoint","_inPlot","_getPosition","charAt","userPositionX","userPositionY","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","playing","once","_markDirtyKey","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","axisRange","_seriesAxisRanges","_updateCursor","_start","_end","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","onPrivate","markDirtySize","_toggleDataItem","hideDataItem","showDataItem","tick","bullet","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updateChartLayout","_updatePositions","labels","ticks","axisFills","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","_clearDirty","_sizeDirty","coordinate","_nextItem","_autoGapCount","_fieldName","axisDataItem","Axis","AxisLabel","AxisLabelRadial","template","make","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","downStart","downEnd","extra","_getPan","_point1","_point2","_tooltip","markDirty","_clear","AxisRenderer","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToCoordinate","endPosition","toggleVisibility","x0","x1","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","y0","y1","AxisRendererY","AxisTick","_setBaseInterval","interval","_baseDuration","baseMainDuration","_fixZoomFactor","groupInterval","_dataGrouped","_groupSeriesData","_handleRangeChange","setDataSet","markDirtyExtremes","_seriesDataGrouped","_dataSets","baseAxis","_valueYFields","_valueXFields","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstDate","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","_intervalMax","_intervalMin","selectionMin","selectionMax","modifiedDifference","baseDuration","getGroupInterval","current","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","gridCount","_strictMode","_intervalDuration","id","intervals","gridInterval","nextGridUnit","previousValue","format","formats","_dataItems","processDataItem","date","dateFormatter","j","inited","_markDirtyAxes","_updateGhost","startTime","_date","fields","open","close","endTime","_updateDates","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemPositionX","getDataItemPositionY","positionToValue","NaN","fieldName","result","diValue","first","second","nextItem","value1","zoomToValues","DateAxis","valueFields","dates","_dates","found","len","itemValue","findex","floor","_seriesValuesDirty","_updateAllDates","valueToIndex","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","_frequency","realDuration","startDate","previousPosition","minDifference","realValue","GaplessDateAxis","_beforeChanged","isPrivateDirty","Grid","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_valuesDirty","_getMinMax","_getSelectionMinMax","_groupData","_prepareAxisItems","_updateAxisRanges","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","_formatText","stepPower","decCount","fillEndPosition","updateGrid","hasTag","updateTick","updateFill","updateBullet","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","fixSmallStep","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","valueToFinalPosition","minDiff","initialMin","initialMax","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strictMinMaxSelection","strict","_saveMinMax","animatePrivate","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","_makeGraphics","legendDataItem","markerRectangle","stroke","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","setting","_getTooltipTarget","_draw","Candlestick","mainContainer","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","getRaw","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","CandlestickSeries","ColumnSeries","strokes","fills","_fillGenerator","p","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_startSegment","clear","segmentIndex","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","marker","interactive","disabledColor","bulletFunction","LineSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","getStackedYValue","processSeriesDataItem","_markStakedDirtyStack","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","markDirtySelectionExtremes","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_mainContainerMask","mask","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","stackedToSeries","_afterDataChange","_aggregatesCalculated","_shouldShowBullet","_positionX","_positionY","_markDataSetDirty","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","_position","resetExtremes","XYSeries","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","_itemMap","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","axisPositionToIndex","seriesDataItem","zoomToIndexes","previousIndex","previousUnitValue","selectedItems","changed","skip","unitValue","added","pop","shouldAdd","item","classNames","concat","CategoryDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","lY","hX","OHLC","List","Template","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}